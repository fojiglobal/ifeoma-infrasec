# This is a basic workflow to provision our QA environment using Terraform in CI/CD

name: Destroy Docker OWASP App

# Controls when the workflow will run
on: 
    # Allows you to run this workflow manually from the Actions tab
    workflow_dispatch:
        inputs:
            confirmation:
                description: "Type 'DESTROY' to confirm the operation"
                required: true
                default: ""

# AWS Credentials for our build & deployment (Service Account User Credential)
env: 
    AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY_ID}}
    AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}
    AWS_DEFAULT_REGION: ${{secrets.AWS_DEFAULT_REGION}}

# We want this applied to all jobs
defaults: 
    run:
        shell: bash
        working-directory: "./docker/web-app/"

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs: 
    # Destroy the infrastructure
    tfdestroy:
      name: Destroy Infrastructuree
      runs-on: ubuntu-latest

      steps: 
          # Checkout our branch under the $GITHUB_WORKSPACE for access 
          - name: Checkout Branch
            uses: actions/checkout@v4

        # Validate confirmation input
          - name: Validate Confirmation
            id: validate_confirmation
            run: |
                if [ "${{ github.event.inputs.confirmation }}" != "DESTROY" ]; then
                    echo "Error: You must type 'DESTROY' to confirm this action."
                    exit 1
                fi

          # Set up Terraform to run our terraform commands
          - name: Set Up Terraform
            uses: hashicorp/setup-terraform@v3

          - name: Terraform Init
            id: init
            run: terraform init

          # Destroy our infrastructure
          - name: Destroy Infrastructure
            run: terraform destroy -auto-approve
            # Best practice: Omit -auto-approve for sensitive environments, requiring manual confirmation

          - name: Cleanup Local State (Optional)
            run: |
                echo "Cleaning up local state files..."
                rm -rf .terraform .terraform.lock.hcl terraform.tfstate terraform.tfstate.backup
        
